plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.diffplug.spotless' version '6.25.0'
}

group 'net.smoofyuniverse'
version '1.1.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "utf-8"
}

repositories {
    mavenCentral()
}

dependencies {
    api 'com.google.code.gson:gson:2.10'
}

spotless {
    ratchetFrom 'origin/master'

    java {
        licenseHeaderFile(rootProject.file('HEADER'))
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'oreapi'
            from components.java

            pom {
                name = 'SmoofyOreAPI'
                packaging = 'jar'
                description = "A simple java wrapper for Ore API."
                url = 'https://github.com/Yeregorix/SmoofyOreAPI'

                scm {
                    connection = 'scm:git:https://github.com/Yeregorix/SmoofyOreAPI.git'
                    developerConnection = 'scm:git:https://github.com/Yeregorix/SmoofyOreAPI.git'
                    url = 'https://github.com/Yeregorix/SmoofyOreAPI'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'Yeregorix'
                        name = 'Hugo Dupanloup'
                        email = 'yeregorix@smoofyuniverse.net'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ?
                    "https://oss.sonatype.org/content/repositories/snapshots/"
                    : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

            credentials {
                username findProperty('ossrhUsername')
                password findProperty('ossrhPassword')
            }
        }
    }
}

if (project.hasProperty("signing.keyId")) {
    apply plugin: 'signing'
    signing {
        sign publishing.publications.mavenJava
    }
}
